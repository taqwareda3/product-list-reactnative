{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { Box, Heading, AspectRatio, Image, Text, HStack, Stack } from \"native-base\";\nimport { useContext, useEffect } from \"react\";\nimport { getProductDetails, clearDetails } from \"../actions/ProductsAction\";\nimport { ProductsContext } from \"../context/\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Example = function Example(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(ProductsContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  useEffect(function () {\n    var resolveAction = function resolveAction() {\n      return _regeneratorRuntime.async(function resolveAction$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = dispatch;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getProductDetails(route.params.id));\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    resolveAction();\n    return function () {\n      dispatch(clearDetails());\n    };\n  }, []);\n  if (state.details.id) return _jsx(Box, {\n    alignItems: \"center\",\n    children: _jsxs(Box, {\n      marginTop: 20,\n      maxW: \"100\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      borderColor: \"coolGray.200\",\n      borderWidth: \"1\",\n      _dark: {\n        borderColor: \"coolGray.600\",\n        backgroundColor: \"gray.700\"\n      },\n      _web: {\n        shadow: 2,\n        borderWidth: 0\n      },\n      _light: {\n        backgroundColor: \"gray.50\"\n      },\n      children: [_jsx(Box, {\n        children: _jsx(AspectRatio, {\n          w: \"50%\",\n          ratio: 16 / 9,\n          children: _jsx(Image, {\n            width: \"50%\",\n            padding: 5,\n            source: {\n              uri: state.details.image\n            },\n            alt: \"image\"\n          })\n        })\n      }), _jsxs(Stack, {\n        p: \"4\",\n        space: 3,\n        children: [_jsxs(Stack, {\n          space: 2,\n          children: [_jsxs(Heading, {\n            size: \"md\",\n            ml: \"-1\",\n            children: [\"Price:\", state.details.price, \" EGP\"]\n          }), _jsx(Text, {\n            fontSize: \"xs\",\n            _light: {\n              color: COLORS.green\n            },\n            _dark: {\n              color: \"violet.400\"\n            },\n            fontWeight: \"500\",\n            ml: \"-0.5\",\n            mt: \"-1\",\n            children: \"The Silicon Valley of India.\"\n          })]\n        }), _jsx(Text, {\n          fontWeight: \"400\",\n          children: state.details.description\n        }), _jsx(HStack, {\n          alignItems: \"center\",\n          space: 4,\n          justifyContent: \"space-between\"\n        })]\n      })]\n    })\n  });\n  return _jsx(_Fragment, {});\n};\n\nexport default Example;","map":{"version":3,"sources":["E:/ITI/react native/store-main/store-main/src/components/productdetails.js"],"names":["React","Box","Heading","AspectRatio","Image","Text","HStack","Stack","useContext","useEffect","getProductDetails","clearDetails","ProductsContext","Example","route","state","dispatch","resolveAction","params","id","details","borderColor","backgroundColor","shadow","borderWidth","uri","image","price","color","COLORS","green","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Box,Heading, AspectRatio, Image,Text,HStack,Stack,\n} from \"native-base\";\nimport { useContext, useEffect } from \"react\";\nimport { getProductDetails, clearDetails } from \"../actions/ProductsAction\";\nimport { ProductsContext } from \"../context/\";\n \n\nconst Example = ({ route }) => {\n  const { state, dispatch } = useContext(ProductsContext);\n\n  useEffect(() => {\n    const resolveAction = async () => {\n      dispatch(await getProductDetails(route.params.id));\n    };\n    resolveAction();\n    return () => {\n      dispatch(clearDetails());\n    };\n  }, []);\n  if (state.details.id)\n    return (\n      <Box alignItems=\"center\">\n        <Box\n          marginTop={20}\n          maxW=\"100\"\n          rounded=\"lg\"\n          overflow=\"hidden\"\n          borderColor=\"coolGray.200\"\n          borderWidth=\"1\"\n          _dark={{\n            borderColor: \"coolGray.600\",\n            backgroundColor: \"gray.700\",\n          }}\n          _web={{\n            shadow: 2,\n            borderWidth: 0,\n          }}\n          _light={{\n            backgroundColor: \"gray.50\",\n          }}\n        >\n          <Box>\n            <AspectRatio w=\"50%\"  ratio={16 / 9}>\n              <Image\n              width=\"50%\" \n\n\n              padding={5}\n                source={{\n                  uri: state.details.image,\n                }}\n                alt=\"image\"\n              />\n            </AspectRatio>\n          </Box>\n          <Stack p=\"4\" space={3}>\n            <Stack space={2}>\n              <Heading size=\"md\" ml=\"-1\">\n                Price:{state.details.price} EGP\n              </Heading>\n              <Text\n                fontSize=\"xs\"\n                _light={{\n                  color: COLORS.green,\n                }}\n                _dark={{\n                  color: \"violet.400\",\n                }}\n                fontWeight=\"500\"\n                ml=\"-0.5\"\n                mt=\"-1\"\n              >\n                The Silicon Valley of India.\n              </Text>\n            </Stack>\n            <Text fontWeight=\"400\">{state.details.description}</Text>\n            <HStack\n              alignItems=\"center\"\n              space={4}\n              justifyContent=\"space-between\"\n            >\n             \n            </HStack>\n          </Stack>\n        </Box>\n      </Box>\n    );\n  return (\n      \n   <></>\n  );\n};\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}