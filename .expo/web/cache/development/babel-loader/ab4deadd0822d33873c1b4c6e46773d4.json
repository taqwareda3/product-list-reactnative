{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseURL = \"https://fakestoreapi.com/products\";\nimport axios from \"axios\";\nexport var getUsers = function getUsers() {\n  var users, response;\n  return _regeneratorRuntime.async(function getUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          users = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 4:\n          response = _context.sent;\n          users = response.data;\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 11:\n          console.log(\"after resolve\");\n          return _context.abrupt(\"return\", {\n            type: \"USERS_LIST\",\n            payload: users\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getUserDetails = function getUserDetails(id) {\n  var user, response;\n  return _regeneratorRuntime.async(function getUserDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          user = {};\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + \"/\" + id));\n\n        case 4:\n          response = _context2.sent;\n          user = response.data;\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 11:\n          console.log(\"after resolve\");\n          return _context2.abrupt(\"return\", {\n            type: \"USERS_DETAILS\",\n            payload: user\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var clearDetails = function clearDetails() {\n  return {\n    type: \"CLEAR_DETAILS\"\n  };\n};","map":{"version":3,"sources":["D:/esraa/demos3/Demos/src/actions/index.js"],"names":["baseURL","axios","getUsers","users","get","response","data","console","log","type","payload","getUserDetails","id","user","clearDetails"],"mappings":";AAAA,IAAMA,OAAO,GAAG,mCAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,KADkB,GACV,EADU;AAAA;AAAA;AAAA,2CAGGF,KAAK,CAACG,GAAN,CAAUJ,OAAV,CAHH;;AAAA;AAGdK,UAAAA,QAHc;AAIpBF,UAAAA,KAAK,GAAGE,QAAQ,CAACC,IAAjB;AAJoB;AAAA;;AAAA;AAAA;AAAA;AAMpBC,UAAAA,OAAO,CAACC,GAAR;;AANoB;AAQtBD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AARsB,2CASf;AACLC,YAAAA,IAAI,EAAE,YADD;AAELC,YAAAA,OAAO,EAAEP;AAFJ,WATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAeP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,UAAAA,IADwB,GACjB,EADiB;AAAA;AAAA;AAAA,2CAGHZ,KAAK,CAACG,GAAN,CAAaJ,OAAb,SAAwBY,EAAxB,CAHG;;AAAA;AAGpBP,UAAAA,QAHoB;AAI1BQ,UAAAA,IAAI,GAAGR,QAAQ,CAACC,IAAhB;AAJ0B;AAAA;;AAAA;AAAA;AAAA;AAM1BC,UAAAA,OAAO,CAACC,GAAR;;AAN0B;AAQ5BD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAR4B,4CASrB;AACLC,YAAAA,IAAI,EAAE,eADD;AAELC,YAAAA,OAAO,EAAEG;AAFJ,WATqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAeP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM","sourcesContent":["const baseURL = \"https://fakestoreapi.com/products\";\r\nimport axios from \"axios\";\r\n\r\nexport const getUsers = async () => {\r\n  let users = [];\r\n  try {\r\n    const response = await axios.get(baseURL);\r\n    users = response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"after resolve\");\r\n  return {\r\n    type: \"USERS_LIST\",\r\n    payload: users,\r\n  };\r\n};\r\n\r\nexport const getUserDetails = async (id) => {\r\n  let user = {};\r\n  try {\r\n    const response = await axios.get(`${baseURL}/${id}`);\r\n    user = response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"after resolve\");\r\n  return {\r\n    type: \"USERS_DETAILS\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const clearDetails = () => {\r\n  return {\r\n    type: \"CLEAR_DETAILS\",\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}