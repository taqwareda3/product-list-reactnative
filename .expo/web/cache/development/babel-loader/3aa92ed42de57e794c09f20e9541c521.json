{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseURL = \"https://fakestoreapi.com/products\";\nimport axios from \"axios\";\nexport var getUsers = function getUsers() {\n  var products, response;\n  return _regeneratorRuntime.async(function getUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          products = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 4:\n          response = _context.sent;\n          products = response.data;\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", {\n            type: \"PRODUCTS_LIST\",\n            payload: products\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getProductDetails = function getProductDetails(id) {\n  var product, response;\n  return _regeneratorRuntime.async(function getProductDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          product = {};\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + \"/\" + id));\n\n        case 4:\n          response = _context2.sent;\n          product = response.data;\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 11:\n          console.log(\"after resolve\");\n          return _context2.abrupt(\"return\", {\n            type: \"USERS_DETAILS\",\n            payload: user\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var clearDetails = function clearDetails() {\n  return {\n    type: \"CLEAR_DETAILS\"\n  };\n};","map":{"version":3,"sources":["D:/esraa/demos3/Demos/src/actions/index.js"],"names":["baseURL","axios","getUsers","products","get","response","data","console","log","type","payload","getProductDetails","id","product","user","clearDetails"],"mappings":";AAAA,IAAMA,OAAO,GAAG,mCAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBC,UAAAA,QADkB,GACP,EADO;AAAA;AAAA;AAAA,2CAGGF,KAAK,CAACG,GAAN,CAAUJ,OAAV,CAHH;;AAAA;AAGdK,UAAAA,QAHc;AAIpBF,UAAAA,QAAQ,GAAGE,QAAQ,CAACC,IAApB;AAJoB;AAAA;;AAAA;AAAA;AAAA;AAMpBC,UAAAA,OAAO,CAACC,GAAR;;AANoB;AAAA,2CASf;AACLC,YAAAA,IAAI,EAAE,eADD;AAELC,YAAAA,OAAO,EAAEP;AAFJ,WATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAeP,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,UAAAA,OAD2B,GACjB,EADiB;AAAA;AAAA;AAAA,2CAGNZ,KAAK,CAACG,GAAN,CAAaJ,OAAb,SAAwBY,EAAxB,CAHM;;AAAA;AAGvBP,UAAAA,QAHuB;AAI7BQ,UAAAA,OAAO,GAAGR,QAAQ,CAACC,IAAnB;AAJ6B;AAAA;;AAAA;AAAA;AAAA;AAM7BC,UAAAA,OAAO,CAACC,GAAR;;AAN6B;AAQ/BD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAR+B,4CASxB;AACLC,YAAAA,IAAI,EAAE,eADD;AAELC,YAAAA,OAAO,EAAEI;AAFJ,WATwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAeP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLN,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM","sourcesContent":["const baseURL = \"https://fakestoreapi.com/products\";\r\nimport axios from \"axios\";\r\n\r\nexport const getUsers = async () => {\r\n  let products = [];\r\n  try {\r\n    const response = await axios.get(baseURL);\r\n    products = response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n \r\n  return {\r\n    type: \"PRODUCTS_LIST\",\r\n    payload: products,\r\n  };\r\n};\r\n\r\nexport const getProductDetails = async (id) => {\r\n  let product = {};\r\n  try {\r\n    const response = await axios.get(`${baseURL}/${id}`);\r\n    product = response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  console.log(\"after resolve\");\r\n  return {\r\n    type: \"USERS_DETAILS\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const clearDetails = () => {\r\n  return {\r\n    type: \"CLEAR_DETAILS\",\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}