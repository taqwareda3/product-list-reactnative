{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar baseURL = 'https://api.themoviedb.org/3/movie/api_key=c9e063822ef483bfe575773eb57e41ee';\nimport axios from \"axios\";\nexport var getProducts = function getProducts() {\n  var products, response;\n  return _regeneratorRuntime.async(function getProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          products = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL));\n\n        case 4:\n          response = _context.sent;\n          products = response.data;\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", {\n            type: \"PRODUCTS_LIST\",\n            payload: products\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var getProductDetails = function getProductDetails(id) {\n  var product, response;\n  return _regeneratorRuntime.async(function getProductDetails$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          product = {};\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(baseURL + \"/\" + id));\n\n        case 4:\n          response = _context2.sent;\n          product = response.data;\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 11:\n          return _context2.abrupt(\"return\", {\n            type: \"PRODUCT_DETAILS\",\n            payload: product\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};\nexport var clearDetails = function clearDetails() {\n  return {\n    type: \"CLEAR_DETAILS\"\n  };\n};","map":{"version":3,"sources":["E:/ITI/react native/store-main/store-main/src/actions/ProductsAction.js"],"names":["baseURL","axios","getProducts","products","get","response","data","console","log","type","payload","getProductDetails","id","product","clearDetails"],"mappings":";AAAA,IAAMA,OAAO,GAAG,6EAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,QADqB,GACV,EADU;AAAA;AAAA;AAAA,2CAGAF,KAAK,CAACG,GAAN,CAAUJ,OAAV,CAHA;;AAAA;AAGjBK,UAAAA,QAHiB;AAIvBF,UAAAA,QAAQ,GAAGE,QAAQ,CAACC,IAApB;AAJuB;AAAA;;AAAA;AAAA;AAAA;AAMvBC,UAAAA,OAAO,CAACC,GAAR;;AANuB;AAAA,2CASlB;AACLC,YAAAA,IAAI,EAAE,eADD;AAELC,YAAAA,OAAO,EAAEP;AAFJ,WATkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAeP,OAAO,IAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,UAAAA,OAD2B,GACjB,EADiB;AAAA;AAAA;AAAA,2CAGNZ,KAAK,CAACG,GAAN,CAAaJ,OAAb,SAAwBY,EAAxB,CAHM;;AAAA;AAGvBP,UAAAA,QAHuB;AAI7BQ,UAAAA,OAAO,GAAGR,QAAQ,CAACC,IAAnB;AAJ6B;AAAA;;AAAA;AAAA;AAAA;AAM7BC,UAAAA,OAAO,CAACC,GAAR;;AAN6B;AAAA,4CASxB;AACLC,YAAAA,IAAI,EAAE,iBADD;AAELC,YAAAA,OAAO,EAAEG;AAFJ,WATwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAeP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM","sourcesContent":["const baseURL = 'https://api.themoviedb.org/3/movie/api_key=c9e063822ef483bfe575773eb57e41ee';\nimport axios from \"axios\";\n\nexport const getProducts = async () => {\n  let products = [];\n  try {\n    const response = await axios.get(baseURL);\n    products = response.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return {\n    type: \"PRODUCTS_LIST\",\n    payload: products,\n  };\n};\n\nexport const getProductDetails = async (id) => {\n  let product = {};\n  try {\n    const response = await axios.get(`${baseURL}/${id}`);\n    product = response.data;\n  } catch (error) {\n    console.log(error);\n  }\n\n  return {\n    type: \"PRODUCT_DETAILS\",\n    payload: product,\n  };\n};\n\nexport const clearDetails = () => {\n  return {\n    type: \"CLEAR_DETAILS\",\n  };\n};\n"]},"metadata":{},"sourceType":"module"}