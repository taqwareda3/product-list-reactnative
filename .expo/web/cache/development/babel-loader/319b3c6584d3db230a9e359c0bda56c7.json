{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { Box, Heading, AspectRatio, Image, Text, Spinner, HStack, Stack } from \"native-base\";\nimport COLORS from \"../colors/colors\";\nimport { useContext, useEffect } from \"react\";\nimport { getProductDetails, clearDetails } from \"../actions/ProductsAction\";\nimport { ProductsContext } from \"../context/\";\nimport Loading from \"./loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Example = function Example(_ref) {\n  var route = _ref.route;\n\n  var _useContext = useContext(ProductsContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  useEffect(function () {\n    var resolveAction = function resolveAction() {\n      return _regeneratorRuntime.async(function resolveAction$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = dispatch;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getProductDetails(route.params.id));\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    resolveAction();\n    return function () {\n      dispatch(clearDetails());\n    };\n  }, []);\n  if (state.details.id) return _jsx(Box, {\n    alignItems: \"center\",\n    children: _jsxs(Box, {\n      marginTop: 20,\n      maxW: \"80\",\n      rounded: \"lg\",\n      overflow: \"hidden\",\n      borderColor: \"coolGray.200\",\n      borderWidth: \"1\",\n      _dark: {\n        borderColor: \"coolGray.600\",\n        backgroundColor: \"gray.700\"\n      },\n      _web: {\n        shadow: 2,\n        borderWidth: 0\n      },\n      _light: {\n        backgroundColor: \"gray.50\"\n      },\n      children: [_jsx(Box, {\n        children: _jsx(AspectRatio, {\n          w: \"50%\",\n          ratio: 16 / 9,\n          children: _jsx(Image, {\n            width: 50,\n            source: {\n              uri: state.details.image\n            },\n            alt: \"image\"\n          })\n        })\n      }), _jsxs(Stack, {\n        p: \"4\",\n        space: 3,\n        children: [_jsxs(Stack, {\n          space: 2,\n          children: [_jsxs(Heading, {\n            size: \"md\",\n            ml: \"-1\",\n            children: [\"Price:\", state.details.price, \" EGP\"]\n          }), _jsx(Text, {\n            fontSize: \"xs\",\n            _light: {\n              color: COLORS.green\n            },\n            _dark: {\n              color: \"violet.400\"\n            },\n            fontWeight: \"500\",\n            ml: \"-0.5\",\n            mt: \"-1\",\n            children: \"The Silicon Valley of India.\"\n          })]\n        }), _jsx(Text, {\n          fontWeight: \"400\",\n          children: state.details.description\n        }), _jsx(HStack, {\n          alignItems: \"center\",\n          space: 4,\n          justifyContent: \"space-between\"\n        })]\n      })]\n    })\n  });\n  return _jsx(Loading, {});\n};\n\nexport default Example;","map":{"version":3,"sources":["D:/esraa/demos3/Demos/src/components/productdetails.js"],"names":["React","Box","Heading","AspectRatio","Image","Text","Spinner","HStack","Stack","COLORS","useContext","useEffect","getProductDetails","clearDetails","ProductsContext","Loading","Example","route","state","dispatch","resolveAction","params","id","details","borderColor","backgroundColor","shadow","borderWidth","uri","image","price","color","green","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,OAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,KARF,QASO,aATP;AAUA,OAAOC,MAAP;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,iBAAT,EAA4BC,YAA5B;AACA,SAASC,eAAT;AACA,OAAQC,OAAR;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC7B,oBAA4BP,UAAU,CAACI,eAAD,CAAtC;AAAA,MAAQI,KAAR,eAAQA,KAAR;AAAA,MAAeC,QAAf,eAAeA,QAAf;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,4BACpBD,QADoB;AAAA;AAAA,+CACLP,iBAAiB,CAACK,KAAK,CAACI,MAAN,CAAaC,EAAd,CADZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAGAF,IAAAA,aAAa;AACb,WAAO,YAAM;AACXD,MAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AASA,MAAIK,KAAK,CAACK,OAAN,CAAcD,EAAlB,EACE,OACE,KAAC,GAAD;AAAK,IAAA,UAAU,EAAC,QAAhB;AAAA,cACE,MAAC,GAAD;AACE,MAAA,SAAS,EAAE,EADb;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,OAAO,EAAC,IAHV;AAIE,MAAA,QAAQ,EAAC,QAJX;AAKE,MAAA,WAAW,EAAC,cALd;AAME,MAAA,WAAW,EAAC,GANd;AAOE,MAAA,KAAK,EAAE;AACLE,QAAAA,WAAW,EAAE,cADR;AAELC,QAAAA,eAAe,EAAE;AAFZ,OAPT;AAWE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,CADJ;AAEJC,QAAAA,WAAW,EAAE;AAFT,OAXR;AAeE,MAAA,MAAM,EAAE;AACNF,QAAAA,eAAe,EAAE;AADX,OAfV;AAAA,iBAmBE,KAAC,GAAD;AAAA,kBACE,KAAC,WAAD;AAAa,UAAA,CAAC,EAAC,KAAf;AAAsB,UAAA,KAAK,EAAE,KAAK,CAAlC;AAAA,oBACE,KAAC,KAAD;AACA,YAAA,KAAK,EAAE,EADP;AAEE,YAAA,MAAM,EAAE;AACNG,cAAAA,GAAG,EAAEV,KAAK,CAACK,OAAN,CAAcM;AADb,aAFV;AAKE,YAAA,GAAG,EAAC;AALN;AADF;AADF,QAnBF,EA8BE,MAAC,KAAD;AAAO,QAAA,CAAC,EAAC,GAAT;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,mBACE,MAAC,KAAD;AAAO,UAAA,KAAK,EAAE,CAAd;AAAA,qBACE,MAAC,OAAD;AAAS,YAAA,IAAI,EAAC,IAAd;AAAmB,YAAA,EAAE,EAAC,IAAtB;AAAA,iCACSX,KAAK,CAACK,OAAN,CAAcO,KADvB;AAAA,YADF,EAIE,KAAC,IAAD;AACE,YAAA,QAAQ,EAAC,IADX;AAEE,YAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAEtB,MAAM,CAACuB;AADR,aAFV;AAKE,YAAA,KAAK,EAAE;AACLD,cAAAA,KAAK,EAAE;AADF,aALT;AAQE,YAAA,UAAU,EAAC,KARb;AASE,YAAA,EAAE,EAAC,MATL;AAUE,YAAA,EAAE,EAAC,IAVL;AAAA;AAAA,YAJF;AAAA,UADF,EAoBE,KAAC,IAAD;AAAM,UAAA,UAAU,EAAC,KAAjB;AAAA,oBAAwBb,KAAK,CAACK,OAAN,CAAcU;AAAtC,UApBF,EAqBE,KAAC,MAAD;AACE,UAAA,UAAU,EAAC,QADb;AAEE,UAAA,KAAK,EAAE,CAFT;AAGE,UAAA,cAAc,EAAC;AAHjB,UArBF;AAAA,QA9BF;AAAA;AADF,IADF;AAgEF,SAEE,KAAC,OAAD,KAFF;AAID,CAjFD;;AAmFA,eAAejB,OAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  AspectRatio,\r\n  Image,\r\n  Text,\r\n  Spinner,\r\n  HStack,\r\n  Stack,\r\n} from \"native-base\";\r\nimport COLORS from \"../colors/colors\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { getProductDetails, clearDetails } from \"../actions/ProductsAction\";\r\nimport { ProductsContext } from \"../context/\";\r\nimport  Loading from './loading';\r\n\r\nconst Example = ({ route }) => {\r\n  const { state, dispatch } = useContext(ProductsContext);\r\n\r\n  useEffect(() => {\r\n    const resolveAction = async () => {\r\n      dispatch(await getProductDetails(route.params.id));\r\n    };\r\n    resolveAction();\r\n    return () => {\r\n      dispatch(clearDetails());\r\n    };\r\n  }, []);\r\n  if (state.details.id)\r\n    return (\r\n      <Box alignItems=\"center\">\r\n        <Box\r\n          marginTop={20}\r\n          maxW=\"80\"\r\n          rounded=\"lg\"\r\n          overflow=\"hidden\"\r\n          borderColor=\"coolGray.200\"\r\n          borderWidth=\"1\"\r\n          _dark={{\r\n            borderColor: \"coolGray.600\",\r\n            backgroundColor: \"gray.700\",\r\n          }}\r\n          _web={{\r\n            shadow: 2,\r\n            borderWidth: 0,\r\n          }}\r\n          _light={{\r\n            backgroundColor: \"gray.50\",\r\n          }}\r\n        >\r\n          <Box>\r\n            <AspectRatio w=\"50%\"  ratio={16 / 9}>\r\n              <Image\r\n              width={50}\r\n                source={{\r\n                  uri: state.details.image,\r\n                }}\r\n                alt=\"image\"\r\n              />\r\n            </AspectRatio>\r\n          </Box>\r\n          <Stack p=\"4\" space={3}>\r\n            <Stack space={2}>\r\n              <Heading size=\"md\" ml=\"-1\">\r\n                Price:{state.details.price} EGP\r\n              </Heading>\r\n              <Text\r\n                fontSize=\"xs\"\r\n                _light={{\r\n                  color: COLORS.green,\r\n                }}\r\n                _dark={{\r\n                  color: \"violet.400\",\r\n                }}\r\n                fontWeight=\"500\"\r\n                ml=\"-0.5\"\r\n                mt=\"-1\"\r\n              >\r\n                The Silicon Valley of India.\r\n              </Text>\r\n            </Stack>\r\n            <Text fontWeight=\"400\">{state.details.description}</Text>\r\n            <HStack\r\n              alignItems=\"center\"\r\n              space={4}\r\n              justifyContent=\"space-between\"\r\n            >\r\n             \r\n            </HStack>\r\n          </Stack>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  return (\r\n      \r\n    <Loading/>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"]},"metadata":{},"sourceType":"module"}